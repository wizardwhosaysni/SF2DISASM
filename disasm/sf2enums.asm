

; ---------------------------------------------------------------------------

; enum Animation
ANIM_SPRITE_DEATH_SPIN_DELAY: equ $3
ANIM_SPRITE_DEATH_NUM_SPINS: equ $B

; ---------------------------------------------------------------------------

; enum Traps
SOUND_COMMAND: equ $0
CHECK_FLAG: equ $1
SET_FLAG: equ $2
CLEAR_FLAG: equ $3
TEXTBOX: equ $5
MAPSCRIPT: equ $6
VINT_FUNCTIONS: equ $9

; ---------------------------------------------------------------------------

; enum VintActions
VINTS_CLEAR: equ $0
VINTS_ADD: equ $1
VINTS_REMOVE: equ $2
VINTS_DEACTIVATE: equ $3
VINTS_ACTIVATE: equ $4

; ---------------------------------------------------------------------------

; enum VIntBitmap
VDP_COMMAND_REQUEST: equ $0
DEACTIVATE_DMA: equ $1
DMA_REQUEST: equ $3
VRAM_READ_REQUEST: equ $4
ENABLE_VINT: equ $7

; ---------------------------------------------------------------------------

; enum GraphicsValues
GFX_MAX_SPRITES_TO_LOAD: equ $7
GFX_DIAMENU_ICON_NUM_PIXELS: equ $240

; ---------------------------------------------------------------------------

; enum Combatant
COM_ALLY_START: equ $0
COM_POS_IDX: equ $0
COM_BIT_SORT: equ $6
COM_POS_TYPE: equ $7
COM_ALLIES_COUNTER: equ COM_ALLIES_NUM-1
COM_ALLY_END: equ COM_ALLIES_NUM-1
                equIfVanillaRom COM_ALLIES_NUM, $1E
                equIfExpandedRom COM_ALLIES_NUM, $20
COM_ENEMIES_COUNTER: equ $1F
COM_ALLY_SPACEEND: equ $1F
COM_ENEMIES_NUM: equ $20
COM_ALL_COUNTER: equ COM_ALLIES_NUM+COM_ENEMIES_NUM-1
COM_IDX_REALMASK: equ $3F
COM_ALLYENDENEMYSTARTDIFFERENCE: equ $60
COM_TYPE_REALMASK: equ $80
COM_ENEMY_START: equ $80
COM_ENEMY_END: equ $9F
COM_ENEMY_SPACEEND: equ $A0

; ---------------------------------------------------------------------------

; enum Combatant_Idx
COM_IDX_SIZE: equ $6
COM_IDX_MASK: equ $3F

; ---------------------------------------------------------------------------

; enum Combatant_Type
COM_TYPE_MASK: equ $1
COM_TYPE_SIZE: equ $1

; ---------------------------------------------------------------------------

; enum Combatant_Offsets

; ---------------------------------------------------------------------------

; enum Combatant_Status_Bitfield
COM_STATUS_MASK_STUN: equ $1
COM_STATUS_MASK_POISON: equ $2
COM_STATUS_MASK_CURSE: equ $4
COM_STATUS_MASK_MUDDLE2: equ $8
COM_STATUS_MASK_MUDDLE: equ $30
COM_STATUS_MASK_SLEEP: equ $C0
COM_STATUS_MASK_SILENCE: equ $300
COM_STATUS_MASK_SLOW: equ $C00
COM_STATUS_MASK_BOOST: equ $3000
COM_STATUS_MASK_ATTACK: equ $C000

; ---------------------------------------------------------------------------

; enum CharDef
CHARDEF_STARTDATA_ENTRYSIZE: equ $6
CHAR_CLASS_LASTNONPROMOTED: equ $B
CHAR_CLASS_FIRSTPROMOTED: equ $C
CHAR_CLASS_EXTRALEVEL: equ $14
CHAR_STATGAIN_PROJECTIONLEVEL: equ $1E
CHAR_LEVELCAP_BASE: equ $28
CHAR_LEVELCAP_PROMOTED: equ $63
CHAR_STATCAP_AGI_BASE: equ $64
CHAR_STATCAP_AGI_CURRENT: equ $7F
CHAR_STATCAP_LEVEL: equ $C8
CHAR_STATCAP_HP: equ $C8
CHAR_STATCAP_MP: equ $C8
CHAR_STATCAP_ATK: equ $C8
CHAR_STATCAP_DEF: equ $C8
CHAR_STATCAP_MOV: equ $C8
CHAR_STATCAP_EXP: equ $C8
CHAR_STATCAP_AGI_DECREASING: equ $C8

; ---------------------------------------------------------------------------

; enum ClassDef_Offsets
CLASSDEF_OFFSET_MOV: equ $0
CLASSDEF_OFFSET_RESISTANCE: equ $1
CLASSDEF_OFFSET_MOVETYPE: equ $3
CLASSDEF_OFFSET_PROWESS: equ $4

; ---------------------------------------------------------------------------

; enum Resistance (bitfield)
RESISTANCE_WIND_MINOR: equ $1
RESISTANCE_WIND_MAJOR: equ $2
RESISTANCE_WIND_WEAKNESS: equ $3
RESISTANCE_LIGHTNING_MINOR: equ $4
RESISTANCE_LIGHTNING_MAJOR: equ $8
RESISTANCE_LIGHTNING_WEAKNESS: equ $C
RESISTANCE_ICE_MINOR: equ $10
RESISTANCE_ICE_MAJOR: equ $20
RESISTANCE_ICE_WEAKNESS: equ $30
RESISTANCE_FIRE_MINOR: equ $40
RESISTANCE_FIRE_MAJOR: equ $80
RESISTANCE_FIRE_WEAKNESS: equ $C0
RESISTANCE_UNDEFINED1_MINOR: equ $100
RESISTANCE_UNDEFINED1_MAJOR: equ $200
RESISTANCE_UNDEFINED1_WEAKNESS: equ $300
RESISTANCE_UNDEFINED2_MINOR: equ $400
RESISTANCE_UNDEFINED2_MAJOR: equ $800
RESISTANCE_UNDEFINED2_WEAKNESS: equ $C00
RESISTANCE_UNDEFINED3_MINOR: equ $1000
RESISTANCE_UNDEFINED3_MAJOR: equ $2000
RESISTANCE_UNDEFINED3_WEAKNESS: equ $3000
RESISTANCE_STATUS_MINOR: equ $4000
RESISTANCE_STATUS_MAJOR: equ $8000
RESISTANCE_STATUS_IMMUNITY: equ $C000

; ---------------------------------------------------------------------------

; enum Resistance_None
RESISTANCE_NONE: equ $0

; ---------------------------------------------------------------------------

; enum MoveType (bitfield)
MOVETYPE_LOWERNIBBLE_REGULAR: equ $1
MOVETYPE_LOWERNIBBLE_CENTAUR: equ $2
MOVETYPE_LOWERNIBBLE_STEALTH: equ $3
MOVETYPE_LOWERNIBBLE_BRASS_GUNNER: equ $4
MOVETYPE_LOWERNIBBLE_FLYING: equ $5
MOVETYPE_LOWERNIBBLE_HOVERING: equ $6
MOVETYPE_LOWERNIBBLE_AQUATIC: equ $7
MOVETYPE_LOWERNIBBLE_ARCHER: equ $8
MOVETYPE_LOWERNIBBLE_CENTAUR_ARCHER: equ $9
MOVETYPE_LOWERNIBBLE_STEALTH_ARCHER: equ $A
MOVETYPE_LOWERNIBBLE_MAGE: equ $B
MOVETYPE_LOWERNIBBLE_HEALER: equ $C
MOVETYPE_REGULAR: equ $10
MOVETYPE_CENTAUR: equ $20
MOVETYPE_STEALTH: equ $30
MOVETYPE_BRASS_GUNNER: equ $40
MOVETYPE_FLYING: equ $50
MOVETYPE_HOVERING: equ $60
MOVETYPE_AQUATIC: equ $70
MOVETYPE_ARCHER: equ $80
MOVETYPE_CENTAUR_ARCHER: equ $90
MOVETYPE_STEALTH_ARCHER: equ $A0
MOVETYPE_MAGE: equ $B0
MOVETYPE_HEALER: equ $C0

; ---------------------------------------------------------------------------

; enum MoveType_Props
MOVETYPE_MASK_LOWERNIBBLE: equ $F

; ---------------------------------------------------------------------------

; enum Prowess (bitfield)
PROWESS_CRITICAL150_1IN32: equ $0
PROWESS_CRITICAL125_1IN32: equ $1
PROWESS_CRITICAL150_1IN16: equ $2
PROWESS_CRITICAL125_1IN16: equ $3
PROWESS_CRITICAL150_1IN8: equ $4
PROWESS_CRITICAL125_1IN8: equ $5
PROWESS_CRITICAL150_1IN4: equ $6
PROWESS_CRITICAL125_1IN4: equ $7
PROWESS_CRITICAL_NONE: equ $8
PROWESS_CRITICAL_POISON: equ $9
PROWESS_CRITICAL_SLEEP: equ $A
PROWESS_CRITICAL_STUN: equ $B
PROWESS_CRITICAL_MUDDLE: equ $C
PROWESS_CRITICAL_SLOW: equ $D
PROWESS_CRITICAL_MAGIC_DRAIN: equ $E
PROWESS_CRITICAL_SILENCE: equ $F
PROWESS_DOUBLE_1IN32: equ $0
PROWESS_DOUBLE_1IN16: equ $10
PROWESS_DOUBLE_1IN8: equ $20
PROWESS_DOUBLE_1IN4: equ $30
PROWESS_COUNTER_1IN32: equ $0
PROWESS_COUNTER_1IN16: equ $40
PROWESS_COUNTER_1IN8: equ $80
PROWESS_COUNTER_1IN4: equ $C0

; ---------------------------------------------------------------------------

; enum Classes
CLASS_SDMN: equ $0
CLASS_KNTE: equ $1
CLASS_WARR: equ $2
CLASS_MAGE: equ $3
CLASS_PRST: equ $4
CLASS_ACHR: equ $5
CLASS_BDMN: equ $6
CLASS_WFMN: equ $7
CLASS_RNGR: equ $8
CLASS_PHNK: equ $9
CLASS_THIF: equ $A
CLASS_TORT: equ $B
CLASS_HERO: equ $C
CLASS_PLDN: equ $D
CLASS_PGNT: equ $E
CLASS_GLDT: equ $F
CLASS_BRN: equ $10
CLASS_WIZ: equ $11
CLASS_SORC: equ $12
CLASS_VICR: equ $13
CLASS_MMNK: equ $14
CLASS_SNIP: equ $15
CLASS_BRGN: equ $16
CLASS_BDBT: equ $17
CLASS_WFBR: equ $18
CLASS_BWNT: equ $19
CLASS_PHNX: equ $1A
CLASS_NINJ: equ $1B
CLASS_MNST: equ $1C
CLASS_RBT: equ $1D
CLASS_GLM: equ $1E
CLASS_RDBN: equ $1F
CLASS_NONE: equ $FF

; ---------------------------------------------------------------------------

; enum ClassTypes
CLASSTYPE_BASE: equ $0
CLASSTYPE_PROMO: equ $1
CLASSTYPE_SPECIAL: equ $2
CLASSTYPE_REDBARON: equ $FF

; ---------------------------------------------------------------------------

; enum Force
FORCE_MAX_SIZE: equ $C
FORCE_MAX_GOLD: equ $98967F

; ---------------------------------------------------------------------------

; enum Enemy
ENEMYIDX_BURST_ROCK: equ $20
ENEMYIDX_TAROS: equ $58

; ---------------------------------------------------------------------------

; enum EnemyDef
ENEMYDEF_OFFSET_SPELLPOWER: equ $A
ENEMYDEF_OFFSET_MOVETYPE: equ $31
ENEMYDEF_ENTRY_SIZE: equ $38

; ---------------------------------------------------------------------------

; enum SpellPower
SPELLPOWER_REGULAR: equ $0
SPELLPOWER_ENHANCED: equ $63

; ---------------------------------------------------------------------------

; enum CharEntry
CHAR_STATUS_MASK_STUN: equ $1
CHAR_STATUS_BIT_POISON: equ $1
CHAR_ITEMSLOTS_COUNTER: equ $3
CHAR_SPELLSLOTS_COUNTER: equ $3
CHAR_ITEMSLOTS: equ $4
CHAR_SPELLSLOTS: equ $4
CHAR_STATUS_MASK_CURSE: equ $4
CHAR_BIT_ENEMY: equ $7
CHAR_NAME_COUNTER: equ $9
CHAR_NAMELENGTH: equ $A
CHAR_PROWESS_MASK_CRIT: equ $F
CHAR_ENTRY_SIZE: equ $38
CHAR_MASK_IDX: equ $FF
CHAR_STATUS_MASK_SILENCE: equ $300

; ---------------------------------------------------------------------------

; enum CharEntry_Offsets
CHAR_OFFSET_NAME: equ $0
CHAR_OFFSET_CLASS_IDX: equ $A
CHAR_OFFSET_LEVEL: equ $B
CHAR_OFFSET_HP_MAX: equ $C
CHAR_OFFSET_HP_CURRENT: equ $E
CHAR_OFFSET_MP_MAX: equ $10
CHAR_OFFSET_MP_CURRENT: equ $11
CHAR_OFFSET_ATK_MAX: equ $12
CHAR_OFFSET_ATK_CURRENT: equ $13
CHAR_OFFSET_DEF_MAX: equ $14
CHAR_OFFSET_DEF_CURRENT: equ $15
CHAR_OFFSET_AGI_MAX: equ $16
CHAR_OFFSET_AGI_CURRENT: equ $17
CHAR_OFFSET_MOV_MAX: equ $18
CHAR_OFFSET_MOV_CURRENT: equ $19
CHAR_OFFSET_RESIST_BASE: equ $1A
CHAR_OFFSET_RESIST_CURRENT: equ $1C
CHAR_OFFSET_PROWESS_BASE: equ $1E
CHAR_OFFSET_PROWESS_CURRENT: equ $1F
CHAR_OFFSET_ITEM_0: equ $20
CHAR_OFFSET_ITEM_1: equ $22
CHAR_OFFSET_ITEM_2: equ $24
CHAR_OFFSET_ITEM_3: equ $26
CHAR_OFFSET_SPELL_0: equ $28
CHAR_OFFSET_STATUS: equ $2C
CHAR_OFFSET_X: equ $2E
CHAR_OFFSET_Y: equ $2F
CHAR_OFFSET_EXP: equ $30
CHAR_OFFSET_MOVETYPE: equ $31
CHAR_OFFSET_KILLS: equ $32
CHAR_OFFSET_DEFEATS: equ $36
CHAR_OFFSET_ENEMYIDX: equ $37

; ---------------------------------------------------------------------------

; enum EnemyAI
ENEMYAI_THRESHOLD_HEAL1: equ $2
ENEMYAI_THRESHOLD_HEAL2: equ $E
ENEMYAI_THRESHOLD_HEAL3: equ $1C

; ---------------------------------------------------------------------------

; enum Icon_Offsets
ICON_OFFSET_CRACKS: equ $6F00

; ---------------------------------------------------------------------------

; enum IconDef_Idx
ICONIDX_NOTHING: equ $7F
ICONIDX_UNARMED: equ $80
ICONIDX_HEAL: equ $82
ICONIDX_JEWEL_OF_LIGHT: equ $92
ICONIDX_JEWEL_OF_EVIL: equ $93

; ---------------------------------------------------------------------------

; enum Controller_Input_A_Bitmap
INPUT_A_UP: equ $0
INPUT_A_DOWN: equ $1
INPUT_A_LEFT: equ $2
INPUT_A_RIGHT: equ $3
INPUT_A_B: equ $4
INPUT_A_C: equ $5
INPUT_A_A: equ $6
INPUT_A_START: equ $7

; ---------------------------------------------------------------------------

; enum ItemDef
ITEM_SELLPRICE_BITSHIFTRIGHT: equ $2
ITEM_SELLPRICE_MULTIPLIER: equ $3
ITEMDEF_OFFSET_MAXRANGE: equ $4
ITEMDEF_OFFSET_MINRANGE: equ $5
ITEMDEF_LIFE_RING_RECOVERY: equ $5
ITEMDEF_OFFSET_PRICE: equ $6
ITEMDEF_OFFSET_TYPE: equ $8
ITEMDEF_OFFSET_SPELL: equ $9
ITEMDEF_OFFSET_STATINFO1: equ $A
ITEM_MAX_IDX: equ $7F

; ---------------------------------------------------------------------------

; enum EquipFlags (bitfield)
EQUIPFLAG_SDMN: equ $1
EQUIPFLAG_KNTE: equ $2
EQUIPFLAG_WARR: equ $4
EQUIPFLAG_MAGE: equ $8
EQUIPFLAG_PRST: equ $10
EQUIPFLAG_ACHR: equ $20
EQUIPFLAG_BDMN: equ $40
EQUIPFLAG_WFMN: equ $80
EQUIPFLAG_RNGR: equ $100
EQUIPFLAG_PHNK: equ $200
EQUIPFLAG_THIF: equ $400
EQUIPFLAG_TORT: equ $800
EQUIPFLAG_HERO: equ $1000
EQUIPFLAG_PLDN: equ $2000
EQUIPFLAG_PGNT: equ $4000
EQUIPFLAG_GLDT: equ $8000
EQUIPFLAG_BRN: equ $10000
EQUIPFLAG_WIZ: equ $20000
EQUIPFLAG_SORC: equ $40000
EQUIPFLAG_VICR: equ $80000
EQUIPFLAG_MMNK: equ $100000
EQUIPFLAG_SNIP: equ $200000
EQUIPFLAG_BRGN: equ $400000
EQUIPFLAG_BDBT: equ $800000
EQUIPFLAG_WFBR: equ $1000000
EQUIPFLAG_BWNT: equ $2000000
EQUIPFLAG_PHNX: equ $4000000
EQUIPFLAG_NINJ: equ $8000000
EQUIPFLAG_MNST: equ $10000000
EQUIPFLAG_RBT: equ $20000000
EQUIPFLAG_GLM: equ $40000000
EQUIPFLAG_RDBN: equ $80000000

; ---------------------------------------------------------------------------

; enum EquipFlags_Other
EQUIPFLAG_NONE: equ $0
EQUIPFLAG_ALL: equ $FFFFFFFF

; ---------------------------------------------------------------------------

; enum EquipEffects
EQUIPEFFECT_NONE: equ $0
EQUIPEFFECT_UNDEFINED1: equ $1
EQUIPEFFECT_INCREASE_CRITICAL: equ $2
EQUIPEFFECT_INCREASE_DOUBLE: equ $3
EQUIPEFFECT_INCREASE_COUNTER: equ $4
EQUIPEFFECT_UNDEFINED2: equ $5
EQUIPEFFECT_INCREASE_ATK: equ $6
EQUIPEFFECT_INCREASE_DEF: equ $7
EQUIPEFFECT_INCREASE_AGI: equ $8
EQUIPEFFECT_INCREASE_MOV: equ $9
EQUIPEFFECT_DECREASE_ATK: equ $A
EQUIPEFFECT_DECREASE_DEF: equ $B
EQUIPEFFECT_DECREASE_AGI: equ $C
EQUIPEFFECT_DECREASE_MOV: equ $D
EQUIPEFFECT_SET_CRITICAL: equ $E
EQUIPEFFECT_SET_DOUBLE: equ $F
EQUIPEFFECT_SET_COUNTER: equ $10

; ---------------------------------------------------------------------------

; enum Deals
DEALS_ADDAMT_EVEN: equ $1
DEALS_MAX_NUM_PER_ITEM: equ $F
DEALS_BIT_REMAINDER: equ $10
DEALS_ADDAMT_ODD: equ $10

; ---------------------------------------------------------------------------

; enum Caravan
CARAVAN_MAX_ITEMS: equ $3F

; ---------------------------------------------------------------------------

; enum Items (bitfield)
ITEM_MEDICAL_HERB: equ $0
ITEM_HEALING_SEED: equ $1
ITEM_HEALING_DROP: equ $2
ITEM_ANTIDOTE: equ $3
ITEM_ANGEL_WING: equ $4
ITEM_FAIRY_POWDER: equ $5
ITEM_HEALING_WATER: equ $6
ITEM_FAIRY_TEAR: equ $7
ITEM_HEALING_RAIN: equ $8
ITEM_POWER_WATER: equ $9
ITEM_PROTECT_MILK: equ $A
ITEM_QUICK_CHICKEN: equ $B
ITEM_RUNNING_PIMENTO: equ $C
ITEM_CHEERFUL_BREAD: equ $D
ITEM_BRIGHT_HONEY: equ $E
ITEM_BRAVE_APPLE: equ $F
ITEM_SHINING_BALL: equ $10
ITEM_BLIZZARD: equ $11
ITEM_HOLY_THUNDER: equ $12
ITEM_POWER_RING: equ $13
ITEM_PROTECT_RING: equ $14
ITEM_QUICK_RING: equ $15
ITEM_RUNNING_RING: equ $16
ITEM_WHITE_RING: equ $17
ITEM_BLACK_RING: equ $18
ITEM_EVIL_RING: equ $19
ITEM_LEATHER_GLOVE: equ $1A
ITEM_POWER_GLOVE: equ $1B
ITEM_BRASS_KNUCKLES: equ $1C
ITEM_IRON_KNUCKLES: equ $1D
ITEM_MISTY_KNUCKLES: equ $1E
ITEM_GIANT_KNUCKLES: equ $1F
ITEM_EVIL_KNUCKLES: equ $20
ITEM_SHORT_AXE: equ $21
ITEM_HAND_AXE: equ $22
ITEM_MIDDLE_AXE: equ $23
ITEM_POWER_AXE: equ $24
ITEM_BATTLE_AXE: equ $25
ITEM_LARGE_AXE: equ $26
ITEM_GREAT_AXE: equ $27
ITEM_HEAT_AXE: equ $28
ITEM_ATLAS_AXE: equ $29
ITEM_GROUND_AXE: equ $2A
ITEM_RUNE_AXE: equ $2B
ITEM_EVIL_AXE: equ $2C
ITEM_WOODEN_ARROW: equ $2D
ITEM_IRON_ARROW: equ $2E
ITEM_STEEL_ARROW: equ $2F
ITEM_ROBIN_ARROW: equ $30
ITEM_ASSAULT_SHELL: equ $31
ITEM_GREAT_SHOT: equ $32
ITEM_NAZCA_CANNON: equ $33
ITEM_BUSTER_SHOT: equ $34
ITEM_HYPER_CANNON: equ $35
ITEM_GRAND_CANNON: equ $36
ITEM_EVIL_SHOT: equ $37
ITEM_WOODEN_STICK: equ $38
ITEM_SHORT_SWORD: equ $39
ITEM_MIDDLE_SWORD: equ $3A
ITEM_LONG_SWORD: equ $3B
ITEM_STEEL_SWORD: equ $3C
ITEM_ACHILLES_SWORD: equ $3D
ITEM_BROAD_SWORD: equ $3E
ITEM_BUSTER_SWORD: equ $3F
ITEM_GREAT_SWORD: equ $40
ITEM_CRITICAL_SWORD: equ $41
ITEM_BATTLE_SWORD: equ $42
ITEM_FORCE_SWORD: equ $43
ITEM_COUNTER_SWORD: equ $44
ITEM_LEVANTER: equ $45
ITEM_DARK_SWORD: equ $46
ITEM_WOODEN_SWORD: equ $47
ITEM_SHORT_SPEAR: equ $48
ITEM_BRONZE_LANCE: equ $49
ITEM_SPEAR: equ $4A
ITEM_STEEL_LANCE: equ $4B
ITEM_POWER_SPEAR: equ $4C
ITEM_HEAVY_LANCE: equ $4D
ITEM_JAVELIN: equ $4E
ITEM_CHROME_LANCE: equ $4F
ITEM_VALKYRIE: equ $50
ITEM_HOLY_LANCE: equ $51
ITEM_MIST_JAVELIN: equ $52
ITEM_HALBERD: equ $53
ITEM_EVIL_LANCE: equ $54
ITEM_WOODEN_ROD: equ $55
ITEM_SHORT_ROD: equ $56
ITEM_BRONZE_ROD: equ $57
ITEM_IRON_ROD: equ $58
ITEM_POWER_STICK: equ $59
ITEM_FLAIL: equ $5A
ITEM_GUARDIAN_STAFF: equ $5B
ITEM_INDRA_STAFF: equ $5C
ITEM_MAGE_STAFF: equ $5D
ITEM_WISH_STAFF: equ $5E
ITEM_GREAT_ROD: equ $5F
ITEM_SUPPLY_STAFF: equ $60
ITEM_HOLY_STAFF: equ $61
ITEM_FREEZE_STAFF: equ $62
ITEM_GODDESS_STAFF: equ $63
ITEM_MYSTERY_STAFF: equ $64
ITEM_DEMON_ROD: equ $65
ITEM_IRON_BALL: equ $66
ITEM_SHORT_KNIFE: equ $67
ITEM_DAGGER: equ $68
ITEM_KNIFE: equ $69
ITEM_THIEVES_DAGGER: equ $6A
ITEM_KATANA: equ $6B
ITEM_NINJA_KATANA: equ $6C
ITEM_GISARME: equ $6D
ITEM_TAROS_SWORD: equ $6E
ITEM_RIGHT_OF_HOPE: equ $6F
ITEM_WOODEN_PANEL: equ $70
ITEM_SKY_ORB: equ $71
ITEM_CANNON: equ $72
ITEM_DRY_STONE: equ $73
ITEM_DYNAMITE: equ $74
ITEM_ARM_OF_GOLEM: equ $75
ITEM_PEGASUS_WING: equ $76
ITEM_WARRIORS_PRIDE: equ $77
ITEM_SILVER_TANK: equ $78
ITEM_SECRET_BOOK: equ $79
ITEM_VIGOR_BALL: equ $7A
ITEM_MITHRIL: equ $7B
ITEM_LIFE_RING: equ $7C
ITEM_COTTON_BALLOON: equ $7D
ITEM_CHIRRUP_SANDALS: equ $7E
ITEM_NOTHING: equ $7F
ITEM_EQUIPPED: equ $80
ITEM_BROKEN: equ $8000

; ---------------------------------------------------------------------------

; enum ItemType (bitfield)
ITEMTYPE_UNDEFINED: equ $1
ITEMTYPE_WEAPON: equ $2
ITEMTYPE_RING: equ $4
ITEMTYPE_RARE: equ $8
ITEMTYPE_UNSELLABLE: equ $10
ITEMTYPE_CONSUMABLE: equ $20
ITEMTYPE_CURSED: equ $40
ITEMTYPE_MAGICAL: equ $80

; ---------------------------------------------------------------------------

; enum ItemType_None
ITEMTYPE_NONE: equ $0

; ---------------------------------------------------------------------------

; enum ItemType_Props
ITEMTYPE_BIT_WEAPON: equ $1
ITEMTYPE_IDX_WEAPON: equ $1
ITEMTYPE_BIT_RING: equ $2
ITEMTYPE_BIT_RARE: equ $3
ITEMTYPE_BIT_UNSELLABLE: equ $4
ITEMTYPE_BIT_CONSUMABLE: equ $5
ITEMTYPE_BIT_CURSED: equ $6
ITEMTYPE_BIT_MAGICAL: equ $7

; ---------------------------------------------------------------------------

; enum ItemEntry
ITEM_OFFSET_IDXANDEQUIPBYTE: equ $1
ITEM_MASK_IDXANDBROKEN: equ $807F

; ---------------------------------------------------------------------------

; enum ItemEntry_Idx
ITEM_IDX_BITSIZE: equ $7
ITEM_IDX_GOLD_CHESTS_START: equ $80

; ---------------------------------------------------------------------------

; enum ItemEntry_Props
ITEM_BIT_EQUIPPED: equ $7
ITEM_UPPERBIT_BROKEN: equ $7
ITEM_BIT_ENEMYUSE: equ $D
ITEM_BIT_BROKEN: equ $F
ITEM_MASK_IDX: equ $7F

; ---------------------------------------------------------------------------

; enum MapDef
MAP_SIZE_MAXHEIGHT: equ $30
MAP_SIZE_MAXWIDTH: equ $30
MAP_BLOCKIDX_CLOSEDCHEST: equ $D801
MAP_BLOCKIDX_OPENCHEST: equ $D802
MAP_NULLPOSITION: equ $FFFF

; ---------------------------------------------------------------------------

; enum Map_Entity
ENTITYDEF_OFFSET_X: equ $0
ENTITYDEF_OFFSET_Y: equ $2
ENTITYDEF_SIZE_BITS: equ $5
ENTITYDEF_OFFSET_XDEST: equ $C
ENTITYDEF_OFFSET_YDEST: equ $E
ENTITYDEF_OFFSET_FACING: equ $10
ENTITYDEF_OFFSET_ENTNUM: equ $12
ENTITYDEF_OFFSET_MAPSPRITE: equ $13
ENTITYDEF_OFFSET_ACTSCRIPTADDR: equ $14
ENTITYDEF_OFFSET_XSPEED: equ $1A
ENTITYDEF_OFFSET_YSPEED: equ $1B
ENTITYDEF_OFFSET_FLAGS_A: equ $1C
ENTITYDEF_OFFSET_FLAGS_B: equ $1D
ENTITYDEF_OFFSET_ANIMCOUNTER: equ $1E
ENTITYDEF_OFFSET_ACTSCRIPTWAITTIMER: equ $1F
ENTITYDEF_SIZE: equ $20
ENTITYIDX_UNITCURSOR: equ $30

; ---------------------------------------------------------------------------

; enum SoundCommands
SOUND_COMMAND_INIT_DRIVER: equ $20
SOUND_COMMAND_WAIT_MUSIC_END: equ $F0
SOUND_COMMAND_PLAY_PREVIOUS_MUSIC: equ $FB
SOUND_COMMAND_FADE_OUT: equ $FD
SOUND_COMMAND_GET_D0_PARAMETER: equ $FFFF

; ---------------------------------------------------------------------------

; enum Music
MUSIC_NOTHING: equ $0
MUSIC_MAIN_THEME: equ $1
MUSIC_ATTACK: equ $2
MUSIC_PROMOTED_ATTACK: equ $3
MUSIC_PROMOTED_ATTACK_LOOP: equ $4
MUSIC_ENEMY_ATTACK: equ $5
MUSIC_BOSS_ATTACK: equ $6
MUSIC_ZEON_ATTACK: equ $7
MUSIC_TOWN: equ $8
MUSIC_INTRO: equ $9
MUSIC_WITCH: equ $A
MUSIC_SUSPEND: equ $B
MUSIC_SAD_THEME_2: equ $C
MUSIC_ELVEN_TOWN: equ $D
MUSIC_MITULA: equ $E
MUSIC_SAD_THEME_3: equ $F
MUSIC_SAD_THEME_1: equ $10
MUSIC_PIANO_THEME: equ $11
MUSIC_CORRUPTED_SAVE: equ $12
MUSIC_JOIN: equ $13
MUSIC_SAD_JOIN: equ $14
MUSIC_SAVE: equ $15
MUSIC_CURE: equ $16
MUSIC_UNUSED_REVIVE: equ $17
MUSIC_REVIVE: equ $18
MUSIC_PROMOTION: equ $19
MUSIC_CURSED_ITEM: equ $1A
MUSIC_ITEM: equ $1B
MUSIC_TITLE: equ $1C
MUSIC_STOP: equ $20
MUSIC_BATTLE_THEME_3: equ $21
MUSIC_BATTLE_THEME_1: equ $22
MUSIC_SHRINE: equ $23
MUSIC_FINAL_BATTLE: equ $24
MUSIC_MITHRIL_DIGGERS: equ $25
MUSIC_CASTLE: equ $26
MUSIC_HEADQUARTERS: equ $27
MUSIC_MITULA_SHRINE: equ $28
MUSIC_ENDING: equ $29

; ---------------------------------------------------------------------------

; enum Sfx
SFX_MENU_SWITCH: equ $41
SFX_MENU_SELECTION: equ $42
SFX_VALIDATION: equ $43
SFX_REFUSAL: equ $44
SFX_DIALOG_BLEEP_1: equ $45
SFX_DIALOG_BLEEP_2: equ $46
SFX_DIALOG_BLEEP_3: equ $47
SFX_DIALOG_BLEEP_4: equ $48
SFX_DIALOG_BLEEP_5: equ $49
SFX_DIALOG_BLEEP_6: equ $4A
SFX_DIALOG_BLEEP_7: equ $4B
SFX_DIALOG_BLEEP_8: equ $4C
SFX_SPELL_CAST: equ $4D
SFX_DOOR_OPEN_HIGH_PITCH: equ $4E
SFX_WALKING: equ $4F
SFX_UNUSED_FROM_LANDSTALKER: equ $50
SFX_LIGHTNING_1: equ $51
SFX_LIGHTNING_2: equ $52
SFX_HIT_1: equ $53
SFX_HIT_2: equ $54
SFX_BLAST: equ $55
SFX_SWORDS_HIT: equ $56
SFX_JUMP: equ $57
SFX_FALLING: equ $58
SFX_WARP: equ $59
SFX_CHIRRUP_SANDALS: equ $5A
SFX_MONSTER_DIALOG_BLEEP: equ $5B
SFX_DOOR_OPEN: equ $5C
SFX_BIG_DOOR_RUMBLE: equ $5D
SFX_MONSTER_SCREAM: equ $5E
SFX_BUUBOBI: equ $5F
SFX_SECRET_PATH_ROCK: equ $60
SFX_PSH: equ $61
SFX_PSHHH: equ $62
SFX_BLOAB: equ $63
SFX_BLO: equ $64
SFX_LANDSTALKER_ITEM: equ $65
SFX_LEVEL_UP: equ $66
SFX_PRISM_LASER_LOADING: equ $67
SFX_LANDSTALKER_SWITCH: equ $68
SFX_SFCD_STATUES: equ $69
SFX_DESOUL: equ $6A
SFX_SITD_HOWL: equ $6B
SFX_PRISM_LASER_FIRING: equ $6C
SFX_BOOST: equ $6D
SFX_DESOUL_HOVERING: equ $6E
SFX_PRISM_LASER_CUTSCENE_FIRING: equ $6F
SFX_TAROS_DIALOG_BLEEP: equ $70
SFX_HEALING: equ $71
SFX_BLAST_SPELL: equ $72
SFX_WING_FLAP: equ $73
SFX_BATTLEFIELD_DEATH: equ $74
SFX_DEMON_BREATH: equ $75
SFX_INTRO_LIGHTNING: equ $76
SFX_BOLT_SPELL: equ $77
SFX_TINKLING: equ $78

; ---------------------------------------------------------------------------

; enum Sfx_None
SFX_NONE: equ $7F

; ---------------------------------------------------------------------------

; enum SpellDef
SPELLDEF_OFFSET_MPCOST: equ $1
SPELLDEF_RESIST_MINOR: equ $1
SPELLDEF_OFFSET_ANIMIDX: equ $2
SPELLDEF_RESIST_MAJOR: equ $2
SPELLDEF_OFFSET_PROPS: equ $3
SPELLDEF_RESIST_WEAKNESS: equ $3
SPELLDEF_OFFSET_MAXRANGE: equ $4
SPELLDEF_LEVELS_NUM: equ $4
SPELLDEF_OFFSET_MINRANGE: equ $5
SPELLDEF_OFFSET_RADIUS: equ $6
SPELLDEF_OFFSET_POWER: equ $7
SPELLDEF_SIZE: equ $8
MAX_SPELL_IDX: equ $3F

; ---------------------------------------------------------------------------

; enum SpellAnims (bitfield)
SPELLANIMIDX_NONE: equ $0
SPELLANIMIDX_BLAZE: equ $1
SPELLANIMIDX_FREEZE: equ $2
SPELLANIMIDX_DESOUL: equ $3
SPELLANIMIDX_HEALING_FAIRY: equ $4
SPELLANIMIDX_BLAST: equ $5
SPELLANIMIDX_DETOX: equ $6
SPELLANIMIDX_BOLT: equ $7
SPELLANIMIDX_BUFF: equ $8
SPELLANIMIDX_DEBUFF: equ $9
SPELLANIMIDX_MAGIC_DRAIN: equ $A
SPELLANIMIDX_DEMON_BREATH: equ $B
SPELLANIMIDX_FLAME_BREATH: equ $C
SPELLANIMIDX_DAO: equ $11
SPELLANIMIDX_APOLLO: equ $12
SPELLANIMIDX_NEPTUN: equ $13
SPELLANIMIDX_ATLAS: equ $14
SPELLANIMIDX_BUBBLE_BREATH: equ $16
SPELLANIMIDX_SNOW_BREATH: equ $17
SPELLANIMIDX_BURST_ROCK: equ $1E
SPELLANIMIDX_ODD_EYE_BEAM: equ $1F
SPELLANIMIDX_LV2: equ $20
SPELLANIMIDX_LV3: equ $40
SPELLANIMIDX_LV4: equ $60

; ---------------------------------------------------------------------------

; enum SpellProps (bitfield)
SPELLPROPS_TYPE_ATTACK: equ $0
SPELLPROPS_TYPE_HEAL: equ $1
SPELLPROPS_TYPE_STATUS: equ $2
SPELLPROPS_TYPE_SPECIAL: equ $3
SPELLPROPS_TARGET_TEAMMATES: equ $40
SPELLPROPS_AFFECTEDBYSILENCE: equ $80

; ---------------------------------------------------------------------------

; enum SpellProps_Other
SPELLPROPS_MASK_TYPE: equ $3
SPELLPROPS_BIT_AFFECTEDBYSILENCE: equ $7

; ---------------------------------------------------------------------------

; enum Spells (bitfield)
SPELL_HEAL: equ $0
SPELL_AURA: equ $1
SPELL_DETOX: equ $2
SPELL_BOOST: equ $3
SPELL_SLOW: equ $4
SPELL_ATTACK: equ $5
SPELL_DISPEL: equ $6
SPELL_MUDDLE: equ $7
SPELL_DESOUL: equ $8
SPELL_SLEEP: equ $9
SPELL_EGRESS: equ $A
SPELL_BLAZE: equ $B
SPELL_FREEZE: equ $C
SPELL_BOLT: equ $D
SPELL_BLAST: equ $E
SPELL_SPOIT: equ $F
SPELL_HEALIN: equ $10
SPELL_FLAME: equ $11
SPELL_SNOW: equ $12
SPELL_DEMON: equ $13
SPELL_POWER: equ $14
SPELL_GUARD: equ $15
SPELL_SPEED: equ $16
SPELL_IDATEN: equ $17
SPELL_HEALTH: equ $18
SPELL_B_ROCK: equ $19
SPELL_LASER: equ $1A
SPELL_KATON: equ $1B
SPELL_RAIJIN: equ $1C
SPELL_DAO: equ $1D
SPELL_APOLLO: equ $1E
SPELL_NEPTUN: equ $1F
SPELL_ATLAS: equ $20
SPELL_POWDER: equ $21
SPELL_G_TEAR: equ $22
SPELL_HANNY: equ $23
SPELL_BRAVE: equ $24
SPELL_FBALL: equ $25
SPELL_BREZAD: equ $26
SPELL_THUNDR: equ $27
SPELL_AQUA: equ $28
SPELL_CYNTHIA: equ $29
SPELL_SHINE: equ $2A
SPELL_ODDEYE: equ $2B
SPELL_NOTHING: equ $3F
SPELL_LV2: equ $40
SPELL_LV3: equ $80
SPELL_LV4: equ $C0

; ---------------------------------------------------------------------------

; enum SpellEntry
SPELL_OFFSET_IDX: equ $0
SPELL_MASK_RESIST: equ $3
SPELL_OFFSET_LV: equ $6
SPELL_DEFS_COUNTER: equ $63
SPELL_MASK_LV: equ $C0
SPELL_MASK_ENTRY: equ $FF
SPELL_MASK_ALLRESIST: equ $C0FF

; ---------------------------------------------------------------------------

; enum SpellEntry_Idx
SPELL_IDX_BITSIZE: equ $6
SPELL_MASK_IDX: equ $3F

; ---------------------------------------------------------------------------

; enum SpellEntry_LV
SPELL_LV_BITSIZE: equ $2
SPELL_UPPERMASK_LV: equ $3

; ---------------------------------------------------------------------------

; enum SpellElements
SPELLELEMENT_WIND: equ $0
SPELLELEMENT_LIGHTNING: equ $2
SPELLELEMENT_ICE: equ $4
SPELLELEMENT_FIRE: equ $6
SPELLELEMENT_UNDEFINED1: equ $8
SPELLELEMENT_UNDEFINED2: equ $A
SPELLELEMENT_UNDEFINED3: equ $C
SPELLELEMENT_STATUS: equ $E

; ---------------------------------------------------------------------------

; enum Battles
BATTLE_VERSUS_ALL_BOSSES: equ $0
BATTLE_INSIDE_ANCIENT_TOWER: equ $1
BATTLE_TO_YEEL: equ $2
BATTLE_TO_HAWEL_HOUSE: equ $3
BATTLE_AMBUSHED_BY_GALAM_SOLDIERS: equ $4
BATTLE_GALAM_CASTLE: equ $5
BATTLE_TO_GRANSEAL: equ $6
BATTLE_VERSUS_DARK_SMOKES: equ $7
BATTLE_NORTH_CLIFF: equ $8
BATTLE_TO_RIBBLE: equ $9
BATTLE_TO_THE_EAST: equ $A
BATTLE_CAVE_OF_DARKNESS: equ $B
BATTLE_MOUNT_VOLCANO: equ $C
BATTLE_POLCA_VILLAGE: equ $D
BATTLE_SOUTHEAST_DESERT: equ $E
BATTLE_SHRINE_SOUTH_OF_RIBBLE: equ $F
BATTLE_VERSUS_KRAKEN: equ $10
BATTLE_TO_TAROS_SHRINE: equ $11
BATTLE_VERSUS_TAROS: equ $12
BATTLE_OUTSIDE_ELVEN_VILLAGE: equ $13
BATTLE_HARPIES_POND: equ $14
BATTLE_DEVIL_TAIL: equ $15
BATTLE_CHESSBOARD: equ $16
BATTLE_VERSUS_WILLARD: equ $17
BATTLE_TO_NORTH_PARMECIA: equ $18
BATTLE_NORTH_CAVE: equ $19
BATTLE_OUTSIDE_KETTO: equ $1A
BATTLE_TO_TRISTAN: equ $1B
BATTLE_PANGOAT_VALLEY_BRIDGE: equ $1C
BATTLE_OUTSIDE_MITULA_SHRINE: equ $1D
BATTLE_VERSUS_ZALBARD: equ $1E
BATTLE_PACALON: equ $1F
BATTLE_TO_MOUN: equ $20
BATTLE_INSIDE_MOUN: equ $21
BATTLE_VERSUS_CAMEELA: equ $22
BATTLE_TO_ROFT: equ $23
BATTLE_VERSUS_PRISM_FLOWERS: equ $24
BATTLE_VERSUS_RED_BARON: equ $25
BATTLE_VERSUS_GESHP: equ $26
BATTLE_TO_ANCIENT_SHRINE: equ $27
BATTLE_VERSUS_ODD_EYE: equ $28
BATTLE_OUTSIDE_ANCIENT_TOWER: equ $29
BATTLE_VERSUS_GALAM: equ $2A
BATTLE_VERSUS_ZEON: equ $2B
BATTLE_FAIRY_WOODS: equ $2C
NOT_CURRENTLY_IN_BATTLE: equ $FF

; ---------------------------------------------------------------------------

; enum Battle_Action
ACTION_ATTACK: equ $0
ACTION_SPELL: equ $1
ACTION_ITEM: equ $2
ACTION_BURSTROCK: equ $4
BATTLE_INACTIONCHANCEDIVISOR_CURSE: equ $4
BATTLE_INACTIONCHANCEDIVISOR_STUN: equ $4
ACTION_NOTHING: equ $5
ACTION_PRISMLASER: equ $6
MAX_BTL_IDX: equ $2C

; ---------------------------------------------------------------------------

; enum Battle_Cutscene
BTLANIM_ATTACK: equ $0
BTLANIM_DODGE: equ $1
BTLANIM_EFFECT: equ $2
BTLSCENE_ACTION_OFFSET_ITEMORSPELL: equ $2
BTLANIM_RANGED: equ $6
BTLSCENE_STACKNEGSIZE: equ $FF68

; ---------------------------------------------------------------------------

; enum Battle_Cutscene_Stack
BCSTACK_OFFSET_CUTOFF: equ $1
BCSTACK_OFFSET_CRIT: equ $3
BCSTACK_OFFSET_TARGETDIES: equ $4
BCSTACK_OFFSET_DODGE: equ $5
BCSTACK_OFFSET_RANGED: equ $6
BCSTACK_OFFSET_SAMESIDE: equ $7
BCSTACK_OFFSET_MUDDLED: equ $8
BCSTACK_OFFSET_INACTION_CURSE: equ $9
BCSTACK_OFFSET_INACTION_STUN: equ $A
BCSTACK_OFFSET_SILENCED: equ $B
BCSTACK_OFFSET_COUNTER: equ $C
BCSTACK_OFFSET_DOUBLE: equ $D
BCSTACK_OFFSET_INEFFECTIVEATTACK: equ $E
BCSTACK_OFFSET_EXPLODE: equ $10
BCSTACK_OFFSET_EXPLODECHAR: equ $11
BCSTACK_OFFSET_DEBUGCOUNTER: equ $14
BCSTACK_OFFSET_DEBUGDOUBLE: equ $15
BCSTACK_OFFSET_DEBUGCRIT: equ $16
BCSTACK_OFFSET_DEBUGDODGE: equ $17

; ---------------------------------------------------------------------------

; enum Def_Lengths
SIZE_ITEM: equ $2
BITS_HALFBYTE: equ $4
SIZE_ITEMDEF: equ $10

; ---------------------------------------------------------------------------

; enum Flags
FLAG_COUNT_FORCEMEMBERS_JOINED: equ $20
FLAGIDX_RAFT: equ $40
FLAGIDX_FOLLOWERS_ASTRAL: equ $46
FLAGIDX_BTLCUTSCENE_GIZMOS: equ $18F
FLAGIDX_BATTLE0: equ $190
FLAG_MASK: equ $3FF

; ---------------------------------------------------------------------------

; enum Codes
CODE_USEFIRSTSPELLLIST: equ $FE
CODE_NOTHING_BYTE: equ $FF
CODE_TERMINATOR_BYTE: equ $FF
CODE_NOTHING_WORD: equ $FFFF
CODE_TERMINATOR_WORD: equ $FFFF

; ---------------------------------------------------------------------------

; enum Special_Offsets
NRO: equ $FF000000

; ---------------------------------------------------------------------------

; enum Text_Index
TEXTIDX_CHANGEYOURMIND: equ $4
TEXTIDX_HQ: equ $2E
TEXTIDX_CARAVANDESC_ITEMHASEFFECT: equ $5D
TEXTIDX_CARAVANDESC_ITEMHASNOEFFECT: equ $5E
TEXTIDX_CARAVANDESC_EVERYBODY: equ $5F
TEXTIDX_CARAVANDESC_ITEMISFOR: equ $60
TEXTIDX_CARAVANDESC_ITEMFORNOBODY: equ $61
TEXTIDX_CARAVANDESC_ITEMFORNAME: equ $62
TEXTIDX_CARAVANDESC_NEWLINE: equ $63
TEXTIDX_CARAVANDESC_TOEQUIP: equ $64
TEXTIDX_CARAVANDESC_SELLPRICE: equ $65
TEXTIDX_CARAVANDESC_UNSELLABLE: equ $66
TEXTIDX_BATTLE_DAMAGE_ALLY: equ $11C
TEXTIDX_BATTLE_DAMAGE_ENEMY: equ $11D
TEXTIDX_BATTLE_DODGE: equ $11E
TEXTIDX_BATTLE_CRITDAMAGE: equ $11F
TEXTIDX_BATTLE_HEAVYDAMAGE: equ $120
TEXTIDX_BATTLE_INEFFECTIVEATTACK: equ $121
TEXTIDX_BATTLE_CUTOFF: equ $126
TEXTIDX_BATTLE_SILENCED: equ $128
TEXTIDX_BATTLE_CURSEDSTUNNED: equ $167
TEXTIDX_BATTLE_STUNNED: equ $169
TEXTIDX_BATTLE_PICKEDUPITEM: equ $18B
TEXTIDX_BATTLE_DROPPEDITEM: equ $18C
TEXTIDX_END: equ $FFFF

; ---------------------------------------------------------------------------

; enum Windowing
WINDOW_DIALOGUE_TILELINECOUNTER_BATTLE: equ $3
WINDOW_NUMPROMPT_STACK_OFFSET_WINDOWTILESEND: equ $4
WINDOW_DIALOGUE_TILELINECOUNTER_EVENT: equ $5
WINDOW_MEMBER_KD_TEXT_DEFEATS_LENGTH: equ $6
WINDOW_MEMBER_KD_TEXT_KILLS_LENGTH: equ $6
WINDOW_NUMPROMPT_STACK_OFFSET_WINDOWIDX: equ $6
WINDOW_NUMPROMPT_STACK_OFFSET_NUM: equ $8
WINDOW_NUMPROMPT_STACK_OFFSET_MINNUM: equ $A
WINDOW_NUMPROMPT_STACK_OFFSET_MAXNUM: equ $C
WINDOW_NUMPROMPT_STACK_NEGSIZE: equ $10
WINDOW_DIALOGUE_WIDTHINTILES: equ $1A
WINDOW_MEMBER_KD_TEXT_DEFEATS_OFFSET: equ $24
WINDOW_MEMBER_STATS_TEXT_CLASS_OFFSET: equ $2C
WINDOW_MEMBER_KD_TEXT_KILLS_OFFSET: equ $72
WINDOW_MEMBER_KD_VDPTILEORDER_BYTESIZE: equ $C0
WINDOW_MEMBER_PORTRAIT_POSITION: equ $201
WINDOW_MEMBER_KD_POSITION: equ $20B
WINDOW_MEMBER_GOLD_POSITION: equ $217
WINDOW_MEMBER_STATS_VDPTILEORDER_BYTESIZE: equ $444
WINDOW_MEMBER_PORTRAIT_SIZE: equ $80A
WINDOW_MEMBER_KD_SIZE: equ $80C
WINDOW_MEMBER_GOLD_SIZE: equ $80C
WINDOW_MEMBER_STATS_POSITION: equ $A01
WINDOW_MEMBER_STATS_SIZE: equ $151A
WINDOW_MEMBER_STATS_DEST: equ $2001
WINDOW_MEMBER_KD_DEST: equ $F80B
WINDOW_MEMBER_GOLD_DEST: equ $F81C
WINDOW_MEMBER_PORTRAIT_DEST: equ $F8F6

; ---------------------------------------------------------------------------

; enum Window_BattleEquip_Stats
                if (THREE_DIGITS_STATS=1)
WINDOW_BATTLEEQUIP_STATS_TILE_COORDS: equ $601
                else
WINDOW_BATTLEEQUIP_STATS_TILE_COORDS: equ $701
                endif

; ---------------------------------------------------------------------------

; enum Window_FighterMiniStatus
WINDOW_FIGHTERMINISTATUS_DEST: equ $2001

; ---------------------------------------------------------------------------

; enum Window_FighterMiniStatus_Patch_ThreeDigitsStats
                if (THREE_DIGITS_STATS=1)
WINDOW_FIGHTERMINISTATUS_MAX_HP_OFFSET: equ 8
WINDOW_FIGHTERMINISTATUS_WIDTH_COUNTER: equ $A
WINDOW_FIGHTERMINISTATUS_MIN_WIDTH: equ $C
WINDOW_FIGHTERMINISTATUS_STAT_VALUES_OFFSET: equ $10
WINDOW_FIGHTERMINISTATUS_MAX_WIDTH: equ $18
WINDOW_FIGHTERMINISTATUS_NEXT_LINE_OFFSET: equ $30
WINDOW_FIGHTERMINISTATUS_COUNTER: equ $3B
WINDOW_FIGHTERMINISTATUS_TWO_LINES_OFFSET: equ WINDOW_FIGHTERMINISTATUS_NEXT_LINE_OFFSET*2
WINDOW_FIGHTERMINISTATUS_MAX_BAR_LENGTH: equ $64
WINDOW_FIGHTERMINISTATUS_SIZE: equ $1805
                else
WINDOW_FIGHTERMINISTATUS_MAX_HP_OFFSET: equ $6
WINDOW_FIGHTERMINISTATUS_WIDTH_COUNTER: equ $9
WINDOW_FIGHTERMINISTATUS_MIN_WIDTH: equ $A
WINDOW_FIGHTERMINISTATUS_STAT_VALUES_OFFSET: equ $C
WINDOW_FIGHTERMINISTATUS_MAX_WIDTH: equ $16
WINDOW_FIGHTERMINISTATUS_NEXT_LINE_OFFSET: equ $2C
WINDOW_FIGHTERMINISTATUS_COUNTER: equ $36
WINDOW_FIGHTERMINISTATUS_TWO_LINES_OFFSET: equ $58
WINDOW_FIGHTERMINISTATUS_MAX_BAR_LENGTH: equ $64
WINDOW_FIGHTERMINISTATUS_SIZE: equ $1605
                endif

; ---------------------------------------------------------------------------

; enum Window_LandEffect
                if (THREE_DIGITS_STATS=1)
WINDOW_LANDEFFECT_TEXT_HEADER_LENGTH: equ 2
WINDOW_LANDEFFECT_TEXT_HEADER_OFFSET: equ $E
WINDOW_LANDEFFECT_TEXT_VALUE_OFFSET: equ $28
WINDOW_LANDEFFECT_SIZE: equ $605
WINDOW_LANDEFFECT_DEST: equ $FA01
                else
WINDOW_LANDEFFECT_TEXT_HEADER_LENGTH: equ $F
WINDOW_LANDEFFECT_TEXT_HEADER_OFFSET: equ $12
WINDOW_LANDEFFECT_TEXT_VALUE_OFFSET: equ $38
WINDOW_LANDEFFECT_SIZE: equ $805
WINDOW_LANDEFFECT_DEST: equ $F801
                endif

; ---------------------------------------------------------------------------

; enum Window_Member_Stats
WINDOW_MEMBER_STATS_NA_LENGTH: equ $3
WINDOW_MEMBER_STATS_STATUSEFFECT_TILES_OFFSET: equ $4E
WINDOW_MEMBER_STATS_ATK_OFFSET: equ $A0
WINDOW_MEMBER_STATS_MAX_HP_OFFSET: equ $E2
WINDOW_MEMBER_STATS_DEF_OFFSET: equ $F4
WINDOW_MEMBER_STATS_MAX_MP_OFFSET: equ $136
WINDOW_MEMBER_STATS_AGI_OFFSET: equ $148

; ---------------------------------------------------------------------------

; enum Window_Member_Stats_Patch_ThreeDigitsStats
                if (THREE_DIGITS_STATS=1)
WINDOW_MEMBER_STATS_ENEMY_LEVEL_OFFSET: equ $8E
WINDOW_MEMBER_STATS_LEVEL_OFFSET: equ $90
WINDOW_MEMBER_STATS_CURRENT_HP_OFFSET: equ $DA
WINDOW_MEMBER_STATS_CURRENT_MP_OFFSET: equ $12E
WINDOW_MEMBER_STATS_ENEMY_EXP_OFFSET: equ $18A
WINDOW_MEMBER_STATS_EXP_OFFSET: equ $18C
WINDOW_MEMBER_STATS_MOV_OFFSET: equ $19E
                else
WINDOW_MEMBER_STATS_ENEMY_LEVEL_OFFSET: equ $8C
WINDOW_MEMBER_STATS_LEVEL_OFFSET: equ $8E
WINDOW_MEMBER_STATS_CURRENT_HP_OFFSET: equ $DC
WINDOW_MEMBER_STATS_CURRENT_MP_OFFSET: equ $130
WINDOW_MEMBER_STATS_ENEMY_EXP_OFFSET: equ $188
WINDOW_MEMBER_STATS_EXP_OFFSET: equ $18A
WINDOW_MEMBER_STATS_MOV_OFFSET: equ $19C
                endif

; ---------------------------------------------------------------------------

; enum Window_MemberList
WINDOW_MEMBERLIST_ENTRIES_COUNTER: equ $4
WINDOW_MEMBERLIST_ENTRY_EXP_OFFSET: equ $4
WINDOW_MEMBERLIST_ENTRY_UNEQUIPPABLE_OFFSET: equ $4
WINDOW_MEMBERLIST_ENTRY_UNEQUIPPABLE_LENGTH: equ $10
WINDOW_MEMBERLIST_ENTRY_NEXT_OFFSET: equ $74
WINDOW_MEMBERLIST_ENTRY_NAME_OFFSET: equ $B2
WINDOW_MEMBERLIST_DEST: equ $220
WINDOW_MEMBERLIST_SIZE: equ $1D0D

; ---------------------------------------------------------------------------

; enum Window_MemberList_Patch_ThreeDigitsStats
                if (THREE_DIGITS_STATS=1)
WINDOW_MEMBERLIST_ENTRY_NEWDEFENSE_OFFSET: equ 4
                else
WINDOW_MEMBERLIST_ENTRY_NEWDEFENSE_OFFSET: equ $8
                endif

; ---------------------------------------------------------------------------

; enum Window_MemberList_Patch_EightCharactersMemberNames
                if (EIGHT_CHARACTERS_MEMBER_NAMES=1)
WINDOW_MEMBERLIST_HIGHLIGHT_SPRITES_COUNTER: equ 2
WINDOW_MEMBERLIST_ENTRY_INIT_OFFSET: equ $12
                else
WINDOW_MEMBERLIST_HIGHLIGHT_SPRITES_COUNTER: equ $1
WINDOW_MEMBERLIST_ENTRY_INIT_OFFSET: equ $10
                endif

; ---------------------------------------------------------------------------

; enum Window_MemberList_Patch_FullClassNames
                if (FULL_CLASS_NAMES=1)
WINDOW_MEMBERLIST_PAGE_HPMPATDFAGMV: equ 2
WINDOW_MEMBERLIST_PAGE_NEWATKANDDEF: equ 3
WINDOW_MEMBERLIST_ENTRY_LEVEL_OFFSET: equ $1E
WINDOW_MEMBERLIST_HEADER_LENGTH: equ $11
                else
WINDOW_MEMBERLIST_PAGE_HPMPATDFAGMV: equ $1
WINDOW_MEMBERLIST_PAGE_NEWATKANDDEF: equ $2
WINDOW_MEMBERLIST_ENTRY_LEVEL_OFFSET: equ $16
WINDOW_MEMBERLIST_HEADER_LENGTH: equ $1E
                endif

; ---------------------------------------------------------------------------

; enum Window_NameCharacter
WINDOW_NAMECHARACTER_PORTRAIT_POSITION: equ $201
WINDOW_NAMECHARACTER_ALPHABET_POSITION: equ $20B
WINDOW_NAMECHARACTER_ALPHABET_DEST: equ $21C
WINDOW_NAMECHARACTER_PORTRAIT_SIZE: equ $80A
WINDOW_NAMECHARACTER_ENTRY_POSITION: equ $A08
WINDOW_NAMECHARACTER_ALPHABET_SIZE: equ $1C07
WINDOW_NAMECHARACTER_ENTRY_DEST: equ $2008
WINDOW_NAMECHARACTER_PORTRAIT_DEST: equ $F8F6

; ---------------------------------------------------------------------------

; enum Window_NameCharacter_Patch_EightCharactersMemberNames
                if (EIGHT_CHARACTERS_MEMBER_NAMES=1)
WINDOW_NAMECHARACTER_ENTRY_NAME_OFFSET: equ $16
WINDOW_NAMECHARACTER_ENTRY_SIZE: equ $A03
                else
WINDOW_NAMECHARACTER_ENTRY_NAME_OFFSET: equ $14
WINDOW_NAMECHARACTER_ENTRY_SIZE: equ $903
                endif

; ---------------------------------------------------------------------------

; enum Member_Name
MEMBER_NAME_SAVED_CHARS_NUM: equ $A

; ---------------------------------------------------------------------------

; enum Member_Name_Patch_EightCharactersMemberNames
                if (EIGHT_CHARACTERS_MEMBER_NAMES=1)
MEMBER_NAME_DISPLAYED_CHARS_NUM: equ 8
                else
MEMBER_NAME_DISPLAYED_CHARS_NUM: equ 7
                endif

; ---------------------------------------------------------------------------

; enum SpriteDefs_TextHighlight_MemberList
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_1_LINK: equ $9
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_1_SIZE: equ $D
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_2_SIZE: equ $D
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_1_INIT_X: equ $9C
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_1_INIT_Y: equ $104
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_2_INIT_Y: equ $104
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_1_PROPS: equ $C5C0
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_2_PROPS: equ $CDC0

; ---------------------------------------------------------------------------

; enum SpriteDefs_TextHighlight_MemberList_Patch_EightCharactersMemberNames
                if (EIGHT_CHARACTERS_MEMBER_NAMES=1)
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_2_LINK: equ $B
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_3_LINK: equ $C
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_2_INIT_X: equ $C4
                else
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_2_LINK: equ $A
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_3_LINK: equ $B
SPRITEDEF_TEXTHIGHLIGHT_MEMBERLIST_2_INIT_X: equ $BC
                endif

; ---------------------------------------------------------------------------

; enum SpriteDefs_TextHighlight_ItemList
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_1_SIZE: equ $D
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_3_SIZE: equ $D
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_3_LINK: equ $10
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_1_INIT_Y: equ $A8
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_2_INIT_Y: equ $A8
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_3_INIT_Y: equ $A8
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_1_INIT_X: equ $12C
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_2_INIT_X: equ $14C
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_3_INIT_X: equ $154
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_1_PROPS: equ $C5C0
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_2_PROPS: equ $C5C2
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_3_PROPS: equ $CDC0

; ---------------------------------------------------------------------------

; enum SpriteDefs_TextHighlight_ItemList_Patch_EightCharactersMemberNames
                if (EIGHT_CHARACTERS_MEMBER_NAMES=1)
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_2_SIZE: equ 1
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_1_LINK: equ $C
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_2_LINK: equ $D
                else
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_2_SIZE: equ $5
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_1_LINK: equ $B
SPRITEDEF_TEXTHIGHLIGHT_ITEMLIST_2_LINK: equ $C
                endif

; ---------------------------------------------------------------------------

; enum Stats
STATS_DIGITS_NUM_LEVEL: equ $2
STATS_DIGITS_NUM_EXP: equ $2
STATS_DIGITS_NUM_MOV: equ $2
STATS_MASK_DISPLAYED_AGI: equ $7F

; ---------------------------------------------------------------------------

; enum Stats_Patch_ThreeDigitsStats
                if (THREE_DIGITS_STATS=1)
STATS_DIGITS_NUM: equ 3
STATS_UNKNOWN_VALUE_THRESHOLD: equ 400
                else
STATS_DIGITS_NUM: equ 2
STATS_UNKNOWN_VALUE_THRESHOLD: equ 100
                endif

; ---------------------------------------------------------------------------

; enum Text
TEXT_CODE_NEWLINE: equ $B
TEXT_CODE_MOVEDOWN: equ $D
TEXT_CODE_TOGGLEFONTCOLOR: equ $5C

; ---------------------------------------------------------------------------

; enum VDP_Tile
VDPTILE_PALETTE3_MASK: equ $C000
VDPTILE_IDX_DIALOGUEWINDOW_BACKGROUND: equ $C020
VDPTILE_IDX_ASCII_SLASH: equ $C02F
VDPTILE_IDX_ASCII_QUESTION_MARK: equ $C03F
VDPTILE_IDX_ASCII_UPPERCASE_A: equ $C041
VDPTILE_IDX_ASCII_UPPERCASE_C: equ $C043
VDPTILE_IDX_ASCII_UPPERCASE_D: equ $C044
VDPTILE_IDX_ASCII_UPPERCASE_E: equ $C045
VDPTILE_IDX_ASCII_UPPERCASE_F: equ $C046
VDPTILE_IDX_ASCII_UPPERCASE_G: equ $C047
VDPTILE_IDX_ASCII_UPPERCASE_H: equ $C048
VDPTILE_IDX_ASCII_UPPERCASE_I: equ $C049
VDPTILE_IDX_ASCII_UPPERCASE_L: equ $C04C
VDPTILE_IDX_ASCII_UPPERCASE_M: equ $C04D
VDPTILE_IDX_ASCII_UPPERCASE_O: equ $C04F
VDPTILE_IDX_ASCII_UPPERCASE_P: equ $C050
VDPTILE_IDX_ASCII_UPPERCASE_T: equ $C054
VDPTILE_IDX_ASCII_UPPERCASE_V: equ $C056
VDPTILE_IDX_ASCII_UPPERCASE_X: equ $C058
VDPTILE_IDX_DIALOGUEWINDOW_TOPLEFTBORDER: equ $C060
VDPTILE_IDX_DIALOGUEWINDOW_TOPBORDER: equ $C061
VDPTILE_IDX_DIALOGUEWINDOW_LEFTBORDER: equ $C070
VDPTILE_IDX_MEMBERLIST_HORIZONTALARROW: equ $C0A0
VDPTILE_IDX_MEMBERLIST_SWORDICON: equ $C0B0
VDPTILE_IDX_DIALOGUEWINDOW_FIRSTINNERBOXTILE: equ $C640
VDPTILE_IDX_SCREEN_BLACKBAR: equ $C77C
VDPTILE_IDX_DIALOGUEWINDOW_TOPRIGHTBORDER: equ $C860
VDPTILE_IDX_DIALOGUEWINDOW_RIGHTBORDER: equ $C870
VDPTILE_IDX_DIALOGUEWINDOW_BOTTOMLEFTBORDER: equ $D060
VDPTILE_IDX_DIALOGUEWINDOW_BOTTOMBORDER: equ $D061
VDPTILE_IDX_DIALOGUEWINDOW_BOTTOMRIGHTBORDER: equ $D860
VDPTILE_STATUSEFFECT_ATTACK: equ $C0A1C0A2
VDPTILE_STATUSEFFECT_BOOST: equ $C0A3C0A4
VDPTILE_STATUSEFFECT_SLOW: equ $C0DDC0DF
VDPTILE_STATUSEFFECT_MUDDLE: equ $C0E2C0E3
VDPTILE_STATUSEFFECT_SILENCE: equ $C0E4C0E5
VDPTILE_STATUSEFFECT_SLEEP: equ $C0E6C0E7
VDPTILE_STATUSEFFECT_POISON: equ $C0E8C0E9
VDPTILE_STATUSEFFECT_STUN: equ $C0EAC0EB
VDPTILE_STATUSEFFECT_CURSE: equ $C0ECC0ED

; ---------------------------------------------------------------------------

; enum Status_Effects
STATUSEFFECT_LASTING_EFFECTS_MASK: equ $7

; ---------------------------------------------------------------------------

; enum Gold
GOLD_STARTING_AMOUNT: equ $3C

; ---------------------------------------------------------------------------

; enum WindowProperties
ACTIVE: equ $0
LAYOUT_OFFSET: equ $2
WIDTH: equ $4
HEIGHT: equ $5
X: equ $6
Y: equ $7
ANIM_ORIG_X: equ $8
ANIM_ORIG_Y: equ $9
ANIM_DEST_X: equ $A
ANIM_DEST_Y: equ $B
ANIM_LENGTH: equ $C
ANIM_COUNTER: equ $D

; ---------------------------------------------------------------------------

; enum Fading
IN_FROM_BLACK: equ $1
OUT_TO_BLACK: equ $2
IN_FROM_WHITE: equ $3
OUT_TO_WHITE: equ $4
PULSATING_1: equ $5
PULSATING_2: equ $6
FLASH_QUICKLY_1: equ $7
NOTHING: equ $8
HALF_OUT_TO_BLACK: equ $9
FLICKER_ONCE: equ $A
FLASH_QUICKLY_2: equ $B
INSTANT_BLACK: equ $C
NOTHING_2: equ $D
HALF_IN_FROM_BLACK: equ $E
OUT_TO_BLACK_2: equ $F

; ---------------------------------------------------------------------------

; enum Direction
RIGHT: equ $0
UP: equ $1
LEFT: equ $2
DOWN: equ $3
NO_DIRECTION: equ $FF

; ---------------------------------------------------------------------------

; enum AllyBattleSprites
ALLYBATTLESPRITE_SDMN: equ $0
ALLYBATTLESPRITE_PRST: equ $1
ALLYBATTLESPRITE_KNTE: equ $2
ALLYBATTLESPRITE_WARR: equ $3
ALLYBATTLESPRITE_MAGE: equ $4
ALLYBATTLESPRITE_THIF: equ $5
ALLYBATTLESPRITE_TORT: equ $6
ALLYBATTLESPRITE_PHNK: equ $7
ALLYBATTLESPRITE_RNGR: equ $8
ALLYBATTLESPRITE_WFMN: equ $9
ALLYBATTLESPRITE_BDMN: equ $A
ALLYBATTLESPRITE_BRGN: equ $B
ALLYBATTLESPRITE_ACHR: equ $C
ALLYBATTLESPRITE_PLDN: equ $D
ALLYBATTLESPRITE_BDBT: equ $E
ALLYBATTLESPRITE_SORC_MALE: equ $F
ALLYBATTLESPRITE_SORC_FEMALE: equ $10
ALLYBATTLESPRITE_PGNT: equ $11
ALLYBATTLESPRITE_GLDT: equ $12
ALLYBATTLESPRITE_MMNK: equ $13
ALLYBATTLESPRITE_RBT: equ $14
ALLYBATTLESPRITE_WIZ: equ $15
ALLYBATTLESPRITE_BRN: equ $16
ALLYBATTLESPRITE_GLM: equ $17
ALLYBATTLESPRITE_HERO: equ $18
ALLYBATTLESPRITE_VICR: equ $19
ALLYBATTLESPRITE_NINJ: equ $1A
ALLYBATTLESPRITE_MNST: equ $1B
ALLYBATTLESPRITE_PHNX: equ $1C
ALLYBATTLESPRITE_BWNT: equ $1D
ALLYBATTLESPRITE_WFBR: equ $1E
ALLYBATTLESPRITE_SNIP: equ $1F
ALLYBATTLESPRITE_NONE: equ $FF

; ---------------------------------------------------------------------------

; enum EnemyBattleSprites
ENEMYBATTLESPRITE_OOZE: equ $0
ENEMYBATTLESPRITE_RAT: equ $1
ENEMYBATTLESPRITE_SOLDIER: equ $2
ENEMYBATTLESPRITE_KNIGHT: equ $3
ENEMYBATTLESPRITE_GOBLIN: equ $4
ENEMYBATTLESPRITE_DWARF: equ $5
ENEMYBATTLESPRITE_ZOMBIE: equ $6
ENEMYBATTLESPRITE_GOLEM: equ $7
ENEMYBATTLESPRITE_KRAKEN_LEG: equ $8
ENEMYBATTLESPRITE_SOULSOWER: equ $9
ENEMYBATTLESPRITE_ORC: equ $A
ENEMYBATTLESPRITE_SKELETON: equ $B
ENEMYBATTLESPRITE_LIZARDMAN: equ $C
ENEMYBATTLESPRITE_WORM: equ $D
ENEMYBATTLESPRITE_CERBERUS: equ $E
ENEMYBATTLESPRITE_REAPER: equ $F
ENEMYBATTLESPRITE_MINOTAUR: equ $10
ENEMYBATTLESPRITE_CYCLOPS: equ $11
ENEMYBATTLESPRITE_BURST_ROCK: equ $12
ENEMYBATTLESPRITE_HYDRA: equ $13
ENEMYBATTLESPRITE_CHAOS_WARRIOR: equ $14
ENEMYBATTLESPRITE_EVIL_BEAST: equ $15
ENEMYBATTLESPRITE_GIZMO: equ $16
ENEMYBATTLESPRITE_BAT: equ $17
ENEMYBATTLESPRITE_GARGOYLE: equ $18
ENEMYBATTLESPRITE_HARPY: equ $19
ENEMYBATTLESPRITE_WYVERN: equ $1A
ENEMYBATTLESPRITE_PEGASUS_KNIGHT: equ $1B
ENEMYBATTLESPRITE_GRIFFIN: equ $1C
ENEMYBATTLESPRITE_DEMON: equ $1D
ENEMYBATTLESPRITE_DRAGON: equ $1E
ENEMYBATTLESPRITE_ARCHER: equ $1F
ENEMYBATTLESPRITE_HUNTER_GOBLIN: equ $20
ENEMYBATTLESPRITE_KRAKEN_ARM: equ $21
ENEMYBATTLESPRITE_ARROW_LAUNCHER: equ $22
ENEMYBATTLESPRITE_BOW_RIDER: equ $23
ENEMYBATTLESPRITE_MAGE: equ $24
ENEMYBATTLESPRITE_WITCH: equ $25
ENEMYBATTLESPRITE_WIZARD: equ $26
ENEMYBATTLESPRITE_NECROMANCER: equ $27
ENEMYBATTLESPRITE_CLERIC: equ $28
ENEMYBATTLESPRITE_MONK: equ $29
ENEMYBATTLESPRITE_BISHOP: equ $2A
ENEMYBATTLESPRITE_SHAMAN: equ $2B
ENEMYBATTLESPRITE_KRAKEN_HEAD: equ $2C
ENEMYBATTLESPRITE_TAROS: equ $2D
ENEMYBATTLESPRITE_KING: equ $2E
ENEMYBATTLESPRITE_ZALBARD: equ $2F
ENEMYBATTLESPRITE_CAMEELA: equ $30
ENEMYBATTLESPRITE_PRISM_FLOWER: equ $31
ENEMYBATTLESPRITE_RED_BARON: equ $32
ENEMYBATTLESPRITE_GESHP: equ $33
ENEMYBATTLESPRITE_ODD_EYE: equ $34
ENEMYBATTLESPRITE_ZEON: equ $35

; ---------------------------------------------------------------------------

; enum WeaponSprites
WEAPONSPRITE_SHORT_AXE: equ $0
WEAPONSPRITE_MIDDLE_AXE: equ $1
WEAPONSPRITE_LARGE_AXE: equ $2
WEAPONSPRITE_MITHRIL_AXE: equ $3
WEAPONSPRITE_WOODEN_SWORD: equ $4
WEAPONSPRITE_SHORT_SWORD: equ $5
WEAPONSPRITE_LONG_SWORD: equ $6
WEAPONSPRITE_GREAT_SWORD: equ $7
WEAPONSPRITE_KATANA: equ $8
WEAPONSPRITE_FORCE_SWORD: equ $9
WEAPONSPRITE_BRONZE_LANCE: equ $A
WEAPONSPRITE_CHROME_LANCE: equ $B
WEAPONSPRITE_SPEAR: equ $C
WEAPONSPRITE_JAVELIN: equ $D
WEAPONSPRITE_HALBERD: equ $E
WEAPONSPRITE_WOODEN_ROD: equ $F
WEAPONSPRITE_GUARDIAN_STAFF: equ $10
WEAPONSPRITE_HOLY_STAFF: equ $11
WEAPONSPRITE_SHORT_ROD: equ $12
WEAPONSPRITE_GREAT_ROD: equ $13
WEAPONSPRITE_POWER_STICK: equ $14
WEAPONSPRITE_KNIFE: equ $15
WEAPONSPRITE_DAGGER: equ $16
WEAPONSPRITE_NONE: equ $FF

; ---------------------------------------------------------------------------

; enum WeaponPalettes
WEAPONPALETTE_SHORT_AXE: equ $0
WEAPONPALETTE_MIDDLE_AXE: equ $1
WEAPONPALETTE_LARGE_AXE: equ $2
WEAPONPALETTE_HEAT_AXE: equ $3
WEAPONPALETTE_ATLAS_AXE: equ $4
WEAPONPALETTE_GROUND_AXE: equ $5
WEAPONPALETTE_RUNE_AXE: equ $6
WEAPONPALETTE_EVIL_AXE: equ $7
WEAPONPALETTE_WOODEN_SWORD: equ $8
WEAPONPALETTE_SHORT_SWORD: equ $9
WEAPONPALETTE_LONG_SWORD: equ $A
WEAPONPALETTE_ACHILLES_SWORD: equ $B
WEAPONPALETTE_COUNTER_SWORD: equ $C
WEAPONPALETTE_GREAT_SWORD: equ $D
WEAPONPALETTE_LEVANTER: equ $E
WEAPONPALETTE_CRITICAL_SWORD: equ $F
WEAPONPALETTE_DARK_SWORD: equ $10
WEAPONPALETTE_KATANA: equ $11
WEAPONPALETTE_FORCE_SWORD: equ $12
WEAPONPALETTE_WOODEN_STICK: equ $13
WEAPONPALETTE_BRONZE_LANCE: equ $14
WEAPONPALETTE_STEEL_LANCE: equ $15
WEAPONPALETTE_HEAVY_LANCE: equ $16
WEAPONPALETTE_CHROME_LANCE: equ $17
WEAPONPALETTE_HOLY_LANCE: equ $18
WEAPONPALETTE_EVIL_LANCE: equ $19
WEAPONPALETTE_SPEAR: equ $1A
WEAPONPALETTE_JAVELIN: equ $1B
WEAPONPALETTE_VALKYRIE: equ $1C
WEAPONPALETTE_HALBERD: equ $1D
WEAPONPALETTE_WOODEN_ROD: equ $1E
WEAPONPALETTE_GUARDIAN_STAFF: equ $1F
WEAPONPALETTE_SUPPLY_STAFF: equ $20
WEAPONPALETTE_HOLY_STAFF: equ $21
WEAPONPALETTE_FREEZE_STAFF: equ $22
WEAPONPALETTE_GODDESS_STAFF: equ $23
WEAPONPALETTE_MYSTERY_STAFF: equ $24
WEAPONPALETTE_SHORT_ROD: equ $25
WEAPONPALETTE_GREAT_ROD: equ $26
WEAPONPALETTE_POWER_STICK: equ $27
WEAPONPALETTE_KNIFE: equ $28
WEAPONPALETTE_DAGGER: equ $29

; ---------------------------------------------------------------------------

; enum Mapsprites
MAPSPRITE_IAN_BASE: equ $0
MAPSPRITE_IAN_PROMO: equ $1
MAPSPRITE_MEAD_BASE: equ $2
MAPSPRITE_MEAD_PROMO: equ $3
MAPSPRITE_PAIGE_BASE: equ $4
MAPSPRITE_PAIGE_PROMO: equ $5
MAPSPRITE_HAWEL_BASE: equ $6
MAPSPRITE_HAWEL_PROMO: equ $7
MAPSPRITE_KNUCKLES_BASE: equ $8
MAPSPRITE_KNUCKLES_PROMO: equ $9
MAPSPRITE_SONETTE_BASE: equ $A
MAPSPRITE_SONETTE_PROMO: equ $B
MAPSPRITE_CYNTHIA_BASE: equ $C
MAPSPRITE_CYNTHIA_PROMO: equ $D
MAPSPRITE_RUBURAN_BASE: equ $E
MAPSPRITE_RUBURAN_PROMO: equ $F
MAPSPRITE_KIDDO_BASE: equ $10
MAPSPRITE_KIDDO_PROMO: equ $11
MAPSPRITE_SYLVIA_BASE: equ $12
MAPSPRITE_SYLVIA_PROMO: equ $13
MAPSPRITE_JULIA_BASE: equ $14
MAPSPRITE_JULIA_PROMO: equ $15
MAPSPRITE_ERIC_PROMO: equ $16
MAPSPRITE_MINTO_PROMO: equ $17
MAPSPRITE_MORTON_PROMO: equ $18
MAPSPRITE_SASUKE_PROMO: equ $19
MAPSPRITE_RIDION_PROMO: equ $1A
MAPSPRITE_KOJIROU_PROMO: equ $1B
MAPSPRITE_MAX_PROMO: equ $1C
MAPSPRITE_ODDEYE_PROMO: equ $1D
MAPSPRITE_ELRIC_BASE: equ $1E
MAPSPRITE_ELRIC_PROMO: equ $1F
MAPSPRITE_ELRIC_SPECIAL: equ $20
MAPSPRITE_SF2ERIC_BASE: equ $21
MAPSPRITE_SF2ERIC_PROMO: equ $22
MAPSPRITE_SF2ERIC_SPECIAL: equ $23
MAPSPRITE_KARNA_BASE: equ $24
MAPSPRITE_KARNA_PROMO: equ $25
MAPSPRITE_KARNA_SPECIAL: equ $26
MAPSPRITE_RANDOLF_BASE: equ $27
MAPSPRITE_RANDOLF_PROMO: equ $28
MAPSPRITE_RANDOLF_SPECIAL: equ $29
MAPSPRITE_TYRIN_BASE: equ $2A
MAPSPRITE_TYRIN_PROMO: equ $2B
MAPSPRITE_TYRIN_SPECIAL: equ $2C
MAPSPRITE_JANET_BASE: equ $2D
MAPSPRITE_JANET_PROMO: equ $2E
MAPSPRITE_JANET_SPECIAL: equ $2F
MAPSPRITE_HIGINS_PROMO: equ $30
MAPSPRITE_SKREECH_PROMO: equ $31
MAPSPRITE_TAYA_SPECIAL: equ $32
MAPSPRITE_FRAYJA_PROMO: equ $33
MAPSPRITE_JARO_SPECIAL: equ $34
MAPSPRITE_GYAN_PROMO: equ $35
MAPSPRITE_SHEELA_SPECIAL: equ $36
MAPSPRITE_ZYNK_PROMO: equ $37
MAPSPRITE_CHAZ_PROMO: equ $38
MAPSPRITE_LEMON_SPECIAL: equ $39
MAPSPRITE_CLAUDE_PROMO: equ $3A
MAPSPRITE_POSE1: equ $3B
MAPSPRITE_BLANK: equ $3C
MAPSPRITE_RAFT: equ $3D
MAPSPRITE_CARAVAN: equ $3E
MAPSPRITE_EFFECT1: equ $3F
MAPSPRITE_OOZE: equ $40
MAPSPRITE_HUGE_RAT: equ $41
MAPSPRITE_GALAM_SOLDIER: equ $42
MAPSPRITE_GALAM_KNIGHT: equ $43
MAPSPRITE_GOBLIN: equ $44
MAPSPRITE_GREEN_OOZE: equ $45
MAPSPRITE_DARK_DWARF: equ $46
MAPSPRITE_HOBGOBLIN: equ $47
MAPSPRITE_ZOMBIE: equ $48
MAPSPRITE_GOLEM: equ $49
MAPSPRITE_KRAKEN_LEG: equ $4A
MAPSPRITE_SOULSOWER: equ $4B
MAPSPRITE_ORC: equ $4C
MAPSPRITE_PAWN: equ $4D
MAPSPRITE_KNIGHT: equ $4E
MAPSPRITE_RAT: equ $4F
MAPSPRITE_BUBBLING_OOZE: equ $50
MAPSPRITE_SKELETON: equ $51
MAPSPRITE_DARK_SOLDIER: equ $52
MAPSPRITE_LIZARDMAN: equ $53
MAPSPRITE_WORM: equ $54
MAPSPRITE_DARK_KNIGHT: equ $55
MAPSPRITE_ORC_LORD: equ $56
MAPSPRITE_DEVIL_SOLDIER: equ $57
MAPSPRITE_CERBERUS: equ $58
MAPSPRITE_MUD_MAN: equ $59
MAPSPRITE_DRAGONEWT: equ $5A
MAPSPRITE_PURPLE_WORM: equ $5B
MAPSPRITE_EXECUTIONER: equ $5C
MAPSPRITE_HELL_HOUND: equ $5D
MAPSPRITE_MINOTAUR: equ $5E
MAPSPRITE_CYCLOPS: equ $5F
MAPSPRITE_BURST_ROCK: equ $60
MAPSPRITE_HYDRA: equ $61
MAPSPRITE_CHAOS_WARRIOR: equ $62
MAPSPRITE_REAPER: equ $63
MAPSPRITE_EVIL_BEAST: equ $64
MAPSPRITE_PYROHYDRA: equ $65
MAPSPRITE_ZEON_GUARD: equ $66
MAPSPRITE_GIZMO: equ $67
MAPSPRITE_HUGE_BAT: equ $68
MAPSPRITE_VAMPIRE_BAT: equ $69
MAPSPRITE_EVIL_CLOUD: equ $6A
MAPSPRITE_GARGOYLE: equ $6B
MAPSPRITE_HARPY: equ $6C
MAPSPRITE_LESSER_DEMON: equ $6D
MAPSPRITE_WYVERN: equ $6E
MAPSPRITE_HARPY_QUEEN: equ $6F
MAPSPRITE_PEGASUS_KNIGHT: equ $70
MAPSPRITE_GRIFFIN: equ $71
MAPSPRITE_MIST_DEMON: equ $72
MAPSPRITE_WHITE_DRAGON: equ $73
MAPSPRITE_DEMON: equ $74
MAPSPRITE_CHAOS_DRAGON: equ $75
MAPSPRITE_DEVIL_GRIFFIN: equ $76
MAPSPRITE_ARCH_DEMON: equ $77
MAPSPRITE_GALAM_ARCHER: equ $78
MAPSPRITE_HUNTER_GOBLIN: equ $79
MAPSPRITE_DEATH_ARCHER: equ $7A
MAPSPRITE_KRAKEN_ARM: equ $7B
MAPSPRITE_ARROW_LAUNCHER: equ $7C
MAPSPRITE_ROOK: equ $7D
MAPSPRITE_DARK_SNIPER: equ $7E
MAPSPRITE_BOW_MASTER: equ $7F
MAPSPRITE_BOW_RIDER: equ $80
MAPSPRITE_DARK_GUNNER: equ $81
MAPSPRITE_HORSEMAN: equ $82
MAPSPRITE_GALAM_MAGE: equ $83
MAPSPRITE_WITCH: equ $84
MAPSPRITE_MASTER_MAGE: equ $85
MAPSPRITE_DARK_MADAM: equ $86
MAPSPRITE_QUEEN: equ $87
MAPSPRITE_WIZARD: equ $88
MAPSPRITE_NECROMANCER: equ $89
MAPSPRITE_CHAOS_WIZARD: equ $8A
MAPSPRITE_DEMON_MASTER: equ $8B
MAPSPRITE_DARK_CLERIC: equ $8C
MAPSPRITE_DEATH_MONK: equ $8D
MAPSPRITE_BLACK_MONK: equ $8E
MAPSPRITE_HIGH_PRIEST: equ $8F
MAPSPRITE_BISHOP: equ $90
MAPSPRITE_DARK_BISHOP: equ $91
MAPSPRITE_MASTER_MONK: equ $92
MAPSPRITE_SHAMAN: equ $93
MAPSPRITE_EVIL_BISHOP: equ $94
MAPSPRITE_BLUE_SHAMAN: equ $95
MAPSPRITE_DARK_SMOKE: equ $96
MAPSPRITE_FILLER1: equ $97
MAPSPRITE_FILLER2: equ $98
MAPSPRITE_KING: equ $99
MAPSPRITE_WILLARD: equ $9A
MAPSPRITE_ZALBARD: equ $9B
MAPSPRITE_CAMEELA: equ $9C
MAPSPRITE_PRISM_FLOWER: equ $9D
MAPSPRITE_RED_BARON: equ $9E
MAPSPRITE_GESHP: equ $9F
MAPSPRITE_ODD_EYE: equ $A0
MAPSPRITE_FILLER3: equ $A1
MAPSPRITE_FILLER4: equ $A2
MAPSPRITE_GALAM_ZEON: equ $A3
MAPSPRITE_GALAM_EVIL: equ $A4
MAPSPRITE_FILLER5: equ $A5
MAPSPRITE_FILLER6: equ $A6
MAPSPRITE_FILLER7: equ $A7
MAPSPRITE_FILLER8: equ $A8
MAPSPRITE_FILLER9: equ $A9
MAPSPRITE_NPC_ERIC: equ $AA
MAPSPRITE_FLAME1: equ $AB
MAPSPRITE_ORB: equ $AC
MAPSPRITE_OBJECT1: equ $AD
MAPSPRITE_POSE2: equ $AE
MAPSPRITE_EFFECT2: equ $AF
MAPSPRITE_POSE3: equ $B0
MAPSPRITE_POSE4: equ $B1
MAPSPRITE_EFFECT3: equ $B2
MAPSPRITE_OBJECT2: equ $B3
MAPSPRITE_OBJECT3: equ $B4
MAPSPRITE_OBJECT4: equ $B5
MAPSPRITE_CHICK_FLYING: equ $B6
MAPSPRITE_EFFECT4: equ $B7
MAPSPRITE_POSE5: equ $B8
MAPSPRITE_ZELOT: equ $B9
MAPSPRITE_EFFECT5: equ $BA
MAPSPRITE_EFFECT6: equ $BB
MAPSPRITE_DESKTOP_KING: equ $BC
MAPSPRITE_HAWEL: equ $BD
MAPSPRITE_BLUE_FLAME: equ $BE
MAPSPRITE_FILLER10: equ $BF
MAPSPRITE_PRIEST: equ $C0
MAPSPRITE_SAILOR: equ $C1
MAPSPRITE_MAN1: equ $C2
MAPSPRITE_WOMAN1: equ $C3
MAPSPRITE_MAN2: equ $C4
MAPSPRITE_WOMAN2: equ $C5
MAPSPRITE_MAN3: equ $C6
MAPSPRITE_WOMAN3: equ $C7
MAPSPRITE_BOY: equ $C8
MAPSPRITE_GIRL: equ $C9
MAPSPRITE_WORKER: equ $CA
MAPSPRITE_GRANSEAL_KING: equ $CB
MAPSPRITE_ELIS: equ $CC
MAPSPRITE_MINISTER: equ $CD
MAPSPRITE_SOLDIER1: equ $CE
MAPSPRITE_SOLDIER2: equ $CF
MAPSPRITE_MAID: equ $D0
MAPSPRITE_ASTRAL: equ $D1
MAPSPRITE_CAT: equ $D2
MAPSPRITE_BOAT: equ $D3
MAPSPRITE_CREED: equ $D4
MAPSPRITE_ODDLER: equ $D5
MAPSPRITE_GALAM_KING: equ $D6
MAPSPRITE_MITULA: equ $D7
MAPSPRITE_POSE6: equ $D8
MAPSPRITE_POSE7: equ $D9
MAPSPRITE_DUCK: equ $DA
MAPSPRITE_FAIRY: equ $DB
MAPSPRITE_BEASTMAN1: equ $DC
MAPSPRITE_TURTLE: equ $DD
MAPSPRITE_BEASTMAN2: equ $DE
MAPSPRITE_ELF_BOY: equ $DF
MAPSPRITE_ELF_GIRL: equ $E0
MAPSPRITE_VIKING: equ $E1
MAPSPRITE_DWARF: equ $E2
MAPSPRITE_BEDOE_KING: equ $E3
MAPSPRITE_BEDOE_MINISTER: equ $E4
MAPSPRITE_BEDOE_SOLDIER: equ $E5
MAPSPRITE_CHICK: equ $E6
MAPSPRITE_PACALON_KING: equ $E7
MAPSPRITE_PACALON_PRINCESS: equ $E8
MAPSPRITE_PACALON_SOLDIER: equ $E9
MAPSPRITE_PACALON_MAID: equ $EA
MAPSPRITE_HEN: equ $EB
MAPSPRITE_BIRDMAN: equ $EC
MAPSPRITE_END_LIST: equ $ED
MAPSPRITE_FREE_SPOT1: equ $EE
MAPSPRITE_FREE_SPOT2: equ $EF
MAPSPRITE_SPECIAL0: equ $F0
MAPSPRITE_SPECIAL1: equ $F1
MAPSPRITE_SPECIAL2: equ $F2
MAPSPRITE_SPECIAL3: equ $F3
MAPSPRITE_SPECIAL4: equ $F4
MAPSPRITE_SPECIAL5: equ $F5
MAPSPRITE_SPECIAL6: equ $F6
MAPSPRITE_SPECIAL7: equ $F7
MAPSPRITE_SPECIAL8: equ $F8
MAPSPRITE_SPECIAL9: equ $F9
MAPSPRITE_SPECIAL10: equ $FA
MAPSPRITE_ZEON: equ $FB
MAPSPRITE_EVIL_SPIRIT: equ $FC
MAPSPRITE_NAZCA_SHIP: equ $FD
MAPSPRITE_KRAKEN: equ $FE
MAPSPRITE_TAROS: equ $FF

; ---------------------------------------------------------------------------

; enum Mapsprites_Default
MAPSPRITE_DEFAULT: equ $0

; ---------------------------------------------------------------------------

; enum Portraits
PORTRAIT_IAN_BASE: equ $0
PORTRAIT_MEAD: equ $1
PORTRAIT_PAIGE: equ $2
PORTRAIT_HAWEL: equ $3
PORTRAIT_KNUCKLES: equ $4
PORTRAIT_SONETTE_BASE: equ $5
PORTRAIT_CYNTHIA_BASE: equ $6
PORTRAIT_RUBURAN_BASE: equ $7
PORTRAIT_KIDDO: equ $8
PORTRAIT_SYLVIA_BASE: equ $9
PORTRAIT_JULIA: equ $A
PORTRAIT_ERIC: equ $B
PORTRAIT_MINTO: equ $C
PORTRAIT_MORTON: equ $D
PORTRAIT_SASUKE: equ $E
PORTRAIT_RIDION: equ $F
PORTRAIT_KOJIROU: equ $10
PORTRAIT_MAX: equ $11
PORTRAIT_ODDEYE: equ $12
PORTRAIT_HIGINS: equ $13
PORTRAIT_SKREECH: equ $14
PORTRAIT_TAYA: equ $15
PORTRAIT_FRAYJA: equ $16
PORTRAIT_JARO: equ $17
PORTRAIT_GYAN: equ $18
PORTRAIT_SHEELA: equ $19
PORTRAIT_ZYNK: equ $1A
PORTRAIT_CHAZ: equ $1B
PORTRAIT_LEMON: equ $1C
PORTRAIT_CLAUDE: equ $1D
PORTRAIT_ELIS: equ $1E
PORTRAIT_ASTRAL: equ $1F
PORTRAIT_GRANSEAL_KING: equ $20
PORTRAIT_SAILOR: equ $21
PORTRAIT_PRIEST: equ $22
PORTRAIT_MITULA: equ $24
PORTRAIT_CREED: equ $25
PORTRAIT_GALAM_KING: equ $26
PORTRAIT_GALAM_EVIL: equ $27
PORTRAIT_ODDLER: equ $28
PORTRAIT_ODD_EYE: equ $29
PORTRAIT_TAROS: equ $2A
PORTRAIT_ZALBARD: equ $2B
PORTRAIT_CAMEELA: equ $2C
PORTRAIT_GESHP: equ $2D
PORTRAIT_ZEON: equ $2E
PORTRAIT_IAN_PROMO: equ $2F
PORTRAIT_RUBURAN_PROMO: equ $30
PORTRAIT_SYLVIA_PROMO: equ $31
PORTRAIT_SONETTE_PROMO: equ $32
PORTRAIT_CYNTHIA_PROMO: equ $33
PORTRAIT_IAN_PAINTING: equ $34
PORTRAIT_NONE: equ $FF
PORTRAIT_DEFAULT: equ $FFFF

; ---------------------------------------------------------------------------

; enum SpriteDialogDef
SPRITEDIALOGDEF_OFFSET_MAPSPRITE: equ $0
SPRITEDIALOGDEF_OFFSET_PORTRAIT: equ $1
SPRITEDIALOGDEF_OFFSET_SPEECHSOUND: equ $2
SPRITEDIALOGDEF_OFFSET_UNDEFINED: equ $3
SPRITEDIALOGDEF_ENTRY_SIZE: equ $4

; ---------------------------------------------------------------------------

; enum Allies
ALLY_IAN: equ $0
ALLY_MEAD: equ $1
ALLY_PAIGE: equ $2
ALLY_HAWEL: equ $3
ALLY_KNUCKLES: equ $4
ALLY_SONETTE: equ $5
ALLY_CYNTHIA: equ $6
ALLY_RUBURAN: equ $7
ALLY_KIDDO: equ $8
ALLY_SYLVIA: equ $9
ALLY_JULIA: equ $A
ALLY_ERIC: equ $B
ALLY_MINTO: equ $C
ALLY_MORTON: equ $D
ALLY_SASUKE: equ $E
ALLY_RIDION: equ $F
ALLY_KOJIROU: equ $10
ALLY_MAX: equ $11
ALLY_ODDEYE: equ $12
ALLY_HIGINS: equ $13
ALLY_SKREECH: equ $14
ALLY_TAYA: equ $15
ALLY_FRAYJA: equ $16
ALLY_JARO: equ $17
ALLY_GYAN: equ $18
ALLY_SHEELA: equ $19
ALLY_ZYNK: equ $1A
ALLY_CHAZ: equ $1B
ALLY_LEMON: equ $1C
ALLY_CLAUDE: equ $1D

; ---------------------------------------------------------------------------

; enum AllyEntry
ALLY_MASK_IDX: equ $1F

; ---------------------------------------------------------------------------

; enum Followers
                equIfVanillaRom FOLLOWER_A, $1E
                equIfExpandedRom FOLLOWER_A, $9C
                equIfVanillaRom FOLLOWER_B, $1F
                equIfExpandedRom FOLLOWER_B, $9D
FOLLOWER_C: equ $9E
FOLLOWER_D: equ $9F

; ---------------------------------------------------------------------------

; enum GrowthCurves
GROWTHCURVE_NONE: equ $0
GROWTHCURVE_LINEAR: equ $1
GROWTHCURVE_LATE: equ $2
GROWTHCURVE_EARLY: equ $3
GROWTHCURVE_MIDDLE: equ $4
GROWTHCURVE_EARLYANDLATE: equ $5

; ---------------------------------------------------------------------------

; enum GrowthCurves_Props
GROWTHCURVE_MASK_IDX: equ $7
GROWTHCURVE_DEF_SIZE: equ $74